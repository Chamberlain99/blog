(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{542:function(s,a,t){s.exports=t.p+"assets/img/image-20220609174441540.6bf70cec.png"},543:function(s,a,t){s.exports=t.p+"assets/img/image-20220609160502017.45fa8678.png"},544:function(s,a,t){s.exports=t.p+"assets/img/image-20220609160542686.13bdd897.png"},545:function(s,a,t){s.exports=t.p+"assets/img/image-20220609160726506.bbd422ad.png"},546:function(s,a,t){s.exports=t.p+"assets/img/image-20220609160745307.2075c662.png"},547:function(s,a,t){s.exports=t.p+"assets/img/image-20220609160801169.54199ccb.png"},548:function(s,a,t){s.exports=t.p+"assets/img/image-20220609160814494.902069d0.png"},549:function(s,a,t){s.exports=t.p+"assets/img/image-20220609160849346.71aa9f44.png"},685:function(s,a,t){"use strict";t.r(a);var e=t(19),n=Object(e.a)({},(function(){var s=this,a=s.$createElement,e=s._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h1",{attrs:{id:"gitlab-cicd自动化部署"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#gitlab-cicd自动化部署"}},[s._v("#")]),s._v(" gitlab-CICD自动化部署")]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("##")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# @Author RunXin")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# @Date 2021/11/08 13:57")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# @description")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("##")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 变量,NGINX映射的静态代码地址")]),s._v("\nvariables:\n  PROJECT_PATH: "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/opt/app-service/zeen-safe-web-html"')]),s._v("\n  DIST_PATH: "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/opt/app-service/zeen-safe-web-html/dist"')]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 拉取项目 - 打包")]),s._v("\nssh-build:\n  stage: build\n  before_script:\n    - "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("which")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("||")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" yum "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" -y "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" \n  script:\n    - "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" --registry https://registry.npm.taobao.org "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v("\n    - "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" run build\n    - "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" -R "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${DIST_PATH}")]),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("date")]),s._v(" +"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%Y%m%d"')]),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("||")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"目录不存在"')]),s._v("\n    - "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("cp")]),s._v(" -R dist "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${DIST_PATH}")]),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("date")]),s._v(" +"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%Y%m%d"')]),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${DIST_PATH}")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("||")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v("\n    - "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("ln")]),s._v(" -s "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${DIST_PATH}")]),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("date")]),s._v(" +"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%Y%m%d"')]),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${DIST_PATH}")]),s._v("\n   "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 该关键字指定了需要缓存的文件夹或者文件，目的是为了加快执行速度。")]),s._v("\n  cache:\n   untracked: "),e("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v("\n   key: "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$CI_COMMIT_REF_NAME")]),s._v('"')]),s._v("\n   paths:\n    - node_modules/    "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 注意是相对路径")]),s._v("\n  tags:    "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# runner 标签(注册runner时设置的，可在 admin->runner中查看)")]),s._v("\n    - zeen-safe-html\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 当提交的分支为master才会触发Pipelines")]),s._v("\n  only:   \n    - develop "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#拉取分支")]),s._v("\n    - master\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br")])]),e("h2",{attrs:{id:"gitlab-ci-cd介绍"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#gitlab-ci-cd介绍"}},[s._v("#")]),s._v(" gitlab CI/CD介绍")]),s._v(" "),e("p",[s._v("Gitlab CI/CD 是一款用于持续集成（CI），持续交付（CD）的工具，相似的工具有Jenkins、Travis CI、GoCD等。")]),s._v(" "),e("p",[s._v("持续集成，即Continuous Integration， 即在源代码变更后（git push）后自动检测（code lint）、构建和进行单元测试的过程，持续集成的目标是快速确保开发人员新提交的代码是好的（少bug），并且适合在代码库中进一步使用。")]),s._v(" "),e("p",[s._v("持续交付，即Continuous Delivery， 通常是指整个流程链（管道），它自动监测源代码变更并通过构建、测试、打包和相关操作运行它们以生成可部署的版本（可以是apk打包，也可以是网站部署），基本上没有任何人为干预。它包括持续集成，持续测试（保证代码质量），持续部署（自动发布版本，供用户使用）。")]),s._v(" "),e("p",[s._v("Gitlab的CI/CD算是比较简单的了，只需要依靠一份"),e("code",[s._v('".gitlab-ci.yml"')]),s._v("，将该文件随代码上传，Gitlab就会自动执行相应的任务，从而实现CI/CD，要像实现CI/CD，我们需要安装"),e("code",[s._v("gitlab-runner")]),s._v("，gitlab-runner相当于任务执行器")]),s._v(" "),e("h2",{attrs:{id:"核心工具"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#核心工具"}},[s._v("#")]),s._v(" 核心工具")]),s._v(" "),e("h3",{attrs:{id:"gitlab-runner"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#gitlab-runner"}},[s._v("#")]),s._v(" GitLab Runner")]),s._v(" "),e("h3",{attrs:{id:"git"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git"}},[s._v("#")]),s._v(" Git")]),s._v(" "),e("p",[s._v("web服务器上需要安装"),e("code",[s._v("Git")]),s._v("来进行远程仓库的获取工作。")]),s._v(" "),e("h3",{attrs:{id:"node"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#node"}},[s._v("#")]),s._v(" Node")]),s._v(" "),e("p",[s._v("用于在web服务器上完成打包工作。")]),s._v(" "),e("h3",{attrs:{id:"npm-or-yarn-or-pnpm"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#npm-or-yarn-or-pnpm"}},[s._v("#")]),s._v(" NPM or Yarn or pnpm")]),s._v(" "),e("p",[s._v("用于在web服务器上完成依赖下载等工作（用"),e("code",[s._v("yarn")]),s._v(","),e("code",[s._v("pnpm")]),s._v("亦可）。")]),s._v(" "),e("p",[e("img",{attrs:{src:t(542),alt:"image-20220609174441540"}})]),s._v(" "),e("h2",{attrs:{id:"git-runner"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-runner"}},[s._v("#")]),s._v(" git-runner")]),s._v(" "),e("p",[s._v("例如我们在测试服务器（9.138）上安装git-runner")]),s._v(" "),e("blockquote",[e("p",[s._v("处于性能考虑，Gitlab Runner 与 GitLab 部署在不同服务器上")]),s._v(" "),e("ul",[e("li",[s._v("gitLab 在单独的仓库服务器上")]),s._v(" "),e("li",[s._v("gitlab Runner 部署在web应用服务器上")])]),s._v(" "),e("p",[e("code",[s._v("GitLab Runner")]),s._v("在与"),e("code",[s._v("GitLab")]),s._v("关联后，可以在服务器上完成诸如项目拉取、文件打包、资源复制等各种命令操作。")])]),s._v(" "),e("h3",{attrs:{id:"下载"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#下载"}},[s._v("#")]),s._v(" 下载")]),s._v(" "),e("p",[s._v("首先我们下载安装git-runner")]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 下载 ")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("curl")]),s._v(" -L --output /usr/local/bin/gitlab-runner https://gitlab-runner-downloads.s3.amazonaws.com/latest/binaries/gitlab-runner-linux-amd64 \n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 给予执行权限 ")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("chmod")]),s._v(" +x /usr/local/bin/gitlab-runner\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 创建一个CI用户")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("useradd")]),s._v(" --comment "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'GitLab Runner'")]),s._v(" --create-home gitlab-runner --shell /bin/bash \n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 安装并且运行服务")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" gitlab-runner "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" --user"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("gitlab-runner --working-directory"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/home/gitlab-runner\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" gitlab-runner start\n\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br")])]),e("h3",{attrs:{id:"注册runner"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#注册runner"}},[s._v("#")]),s._v(" 注册runner")]),s._v(" "),e("p",[e("img",{attrs:{src:t(543),alt:"image-20220609160502017"}})]),s._v(" "),e("h3",{attrs:{id:"gitlab查看runner"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#gitlab查看runner"}},[s._v("#")]),s._v(" gitLab查看runner")]),s._v(" "),e("p",[e("img",{attrs:{src:t(544),alt:"image-20220609160542686"}})]),s._v(" "),e("h3",{attrs:{id:"使用注册好的runner"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用注册好的runner"}},[s._v("#")]),s._v(" 使用注册好的runner")]),s._v(" "),e("p",[s._v("编写"),e("code",[s._v(".gitlab-ci.yml")]),s._v("文件，先了解一些基本概念")]),s._v(" "),e("h4",{attrs:{id:"pipeline"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#pipeline"}},[s._v("#")]),s._v(" Pipeline")]),s._v(" "),e("p",[s._v("一次 Pipeline 其实相当于一次构建任务，里面可以包含多个流程，如安装依赖、运行测试、编译、部署测试服务器、部署生产服务器等流程。 任何提交或者 Merge Request 的合并都可以触发 Pipeline，如下图所示：")]),s._v(" "),e("p",[e("img",{attrs:{src:t(545),alt:"image-20220609160726506"}})]),s._v(" "),e("h4",{attrs:{id:"stages"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#stages"}},[s._v("#")]),s._v(" Stages")]),s._v(" "),e("p",[s._v("Stages 表示构建阶段，说白了就是上面提到的流程。 我们可以在一次 Pipeline 中定义多个 Stages，这些 Stages 会有以下特点：")]),s._v(" "),e("ul",[e("li",[s._v("所有 Stages 会按照顺序运行，即当一个 Stage 完成后，下一个 Stage 才会开始")]),s._v(" "),e("li",[s._v("只有当所有 Stages 完成后，该构建任务 (Pipeline) 才会成功")]),s._v(" "),e("li",[s._v("如果任何一个 Stage 失败，那么后面的 Stages 不会执行，该构建任务 (Pipeline) 失败")])]),s._v(" "),e("p",[s._v("因此，Stages 和 Pipeline 的关系就是：")]),s._v(" "),e("p",[e("img",{attrs:{src:t(546),alt:"image-20220609160745307"}})]),s._v(" "),e("h4",{attrs:{id:"jobs"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#jobs"}},[s._v("#")]),s._v(" Jobs")]),s._v(" "),e("p",[s._v("Jobs 表示构建工作，表示某个 Stage 里面执行的工作。 我们可以在 Stages 里面定义多个 Jobs，这些 Jobs 会有以下特点：")]),s._v(" "),e("ul",[e("li",[s._v("相同 Stage 中的 Jobs 会并行执行")]),s._v(" "),e("li",[s._v("相同 Stage 中的 Jobs 都执行成功时，该 Stage 才会成功")]),s._v(" "),e("li",[s._v("如果任何一个 Job 失败，那么该 Stage 失败，即该构建任务 (Pipeline) 失败")])]),s._v(" "),e("p",[s._v("所以，Jobs 和 Stage 的关系图就是")]),s._v(" "),e("p",[e("img",{attrs:{src:t(547),alt:"image-20220609160801169"}}),s._v("下面我们来写一个简单的.gitlab-ci.yml\n"),e("img",{attrs:{src:t(548),alt:"image-20220609160814494"}})]),s._v(" "),e("blockquote",[e("p",[s._v("注意：安装git-runner的服务器需要安装git，不然你可能看到一下错误：")]),s._v(" "),e("p",[e("img",{attrs:{src:t(549),alt:"image-20220609160849346"}})])]),s._v(" "),e("h2",{attrs:{id:"gitlab-ci编写"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#gitlab-ci编写"}},[s._v("#")]),s._v(" Gitlab-CI编写")]),s._v(" "),e("p",[e("code",[s._v(".gitlab-ci.yml")]),s._v("遵循YAML文件的语法，这份文件记录了你想要执行的各种指令，这些指令可以用来对你的代码进行规范检查（例如PEP8）、自动打包（例如Android自动打包）、自动部署等。")]),s._v(" "),e("p",[s._v("对于新手，如果不知道自己写的"),e("code",[s._v(".gitlab-ci.yml")]),s._v("是否有错误，可以通过Gitlab自带的"),e("code",[s._v("CI Lint")]),s._v("进行检查。")]),s._v(" "),e("h3",{attrs:{id:"before-script和after-script"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#before-script和after-script"}},[s._v("#")]),s._v(" "),e("code",[s._v("before_script")]),s._v("和"),e("code",[s._v("after_script")])]),s._v(" "),e("ul",[e("li",[e("p",[s._v("before_script关键字定义了一组在每个任务开始之前需要执行的命令，")])]),s._v(" "),e("li",[e("p",[s._v("after_script则相反。例如可以在"),e("code",[s._v("before_script")]),s._v("做好"),e("code",[s._v("ssh")]),s._v("连接的准备，见下文。")])])]),s._v(" "),e("blockquote",[e("p",[s._v("注：before_script可以针对全部任务，也可以针对单个任务。")])]),s._v(" "),e("h3",{attrs:{id:"tags"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#tags"}},[s._v("#")]),s._v(" tags")]),s._v(" "),e("p",[s._v("该关键字指定了使用哪个"),e("code",[s._v("Runner")]),s._v("（哪个机器）去执行我们的任务，注意与上文only关键字的tags进行区分。")]),s._v(" "),e("h3",{attrs:{id:"cache"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#cache"}},[s._v("#")]),s._v(" cache")]),s._v(" "),e("p",[s._v("该关键字指定了需要缓存的文件夹或者文件，目的是为了加快执行速度。")]),s._v(" "),e("p",[s._v("值得注意的是，cache不能缓存工作路径以外的文件。比如你的用户是yangan，项目是helloworld，默认的工作路径就是/build/yangan/helloworld, 如果你想缓存/root下的某个文件，就会出现“找不到文件”的错误。")]),s._v(" "),e("p",[s._v("另外，cache并不能保证每次都能命中，而且如果缓存的文件较大，有时候反而会适得其反，导致速度变慢。")]),s._v(" "),e("h1",{attrs:{id:"docker"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#docker"}},[s._v("#")]),s._v(" docker")]),s._v(" "),e("h2",{attrs:{id:"手动部署-瓶颈"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#手动部署-瓶颈"}},[s._v("#")]),s._v(" 手动部署-瓶颈")]),s._v(" "),e("p",[s._v("传统的方式部署静态资源的前端项目就是要经历以下几个过程：")]),s._v(" "),e("ul",[e("li",[e("p",[s._v("下载：从Github下载代码，然后本地"),e("code",[s._v("npm install")])])]),s._v(" "),e("li",[e("p",[s._v("开发："),e("code",[s._v("npm run dev")]),s._v("本地修改代码，测试")])]),s._v(" "),e("li",[e("p",[s._v("编译："),e("code",[s._v("npm run build")]),s._v("使用 Webpack 进行编译，产出静态资源")])]),s._v(" "),e("li",[e("p",[s._v("上传：打开FTP软件，上传替换文件")])]),s._v(" "),e("li",[e("p",[s._v("测试：看看网站是否在线上工作正常")])]),s._v(" "),e("li",[e("p",[s._v("提交：将代码提交到 Github")])])]),s._v(" "),e("p",[s._v("哪怕我只是修改个错别字，都要十几分钟")]),s._v(" "),e("p",[s._v("网站太多，改动太频繁，而每次不管多小的改动都很麻烦。简直让我感觉自己在维护一个万级QPS的大型项目")]),s._v(" "),e("blockquote",[e("p",[s._v("《"),e("strong",[s._v("问题总结")]),s._v("》")]),s._v(" "),e("ul",[e("li",[s._v("手动部署成本太高，改错别字都很麻烦")]),s._v(" "),e("li",[s._v("一台服务器由于时间累积导致环境变得“脏乱差”")]),s._v(" "),e("li",[s._v("重装系统成本太高，难以迁移")])])]),s._v(" "),e("p",[s._v("后来，出现了"),e("code",[s._v("CI/CD")])]),s._v(" "),e("p",[e("code",[s._v("CI/CD")]),s._v(" 是 "),e("code",[s._v("Continuous Intergration/Continuous Deploy")]),s._v(" 的简称，翻译过来就是"),e("code",[s._v("持续集成/持续部署")]),s._v("。"),e("code",[s._v("CD")]),s._v(" 也会被解释为持续交付（"),e("code",[s._v("Continuous Delivery")]),s._v("）")]),s._v(" "),e("p",[s._v("再具体一点就是：")]),s._v(" "),e("ul",[e("li",[e("code",[s._v("持续集成")]),s._v("：当代码仓库代码发生变更，就会自动对代码进行测试和构建，反馈运行结果。")]),s._v(" "),e("li",[e("code",[s._v("持续交付")]),s._v("：持续交付是在持续集成的基础上，可以将集成后的代码依次部署到测试环境、预发布环境、生产环境中")])]),s._v(" "),e("h2",{attrs:{id:"新的技术方案-docker"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#新的技术方案-docker"}},[s._v("#")]),s._v(" 新的技术方案 - docker")]),s._v(" "),e("h3",{attrs:{id:"镜像、容器"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#镜像、容器"}},[s._v("#")]),s._v(" 镜像、容器")]),s._v(" "),e("p",[s._v("docker中有2个重要概念："),e("u",[s._v("镜像、容器")])]),s._v(" "),e("p",[s._v("一个是容器（Container）：容器特别像一个虚拟机，容器中运行着一个完整的操作系统。可以在容器中装 Nodejs，可以执行"),e("code",[s._v("npm install")]),s._v("，可以做一切你当前操作系统能做的事情")]),s._v(" "),e("hr"),s._v(" "),e("p",[s._v("另一个是镜像（Image）：镜像是一个文件，它是用来创建容器的。如果你有装过 Windows 操作系统，那么 Docker 镜像特别像“Win7纯净版.rar”文件")]),s._v(" "),e("hr"),s._v(" "),e("h3",{attrs:{id:"安装docker"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#安装docker"}},[s._v("#")]),s._v(" 安装docker")]),s._v(" "),e("p",[s._v("安装 Docker 在你的电脑上就像安装 VS Code 一样简单")]),s._v(" "),e("p",[e("strong",[s._v("参考链接：")])]),s._v(" "),e("p",[s._v("https://juejin.cn/post/6844903946234904583")]),s._v(" "),e("p",[e("a",{attrs:{href:"https://juejin.cn/post/7037022688493338661",target:"_blank",rel:"noopener noreferrer"}},[s._v(" 前端自动化部署：借助Gitlab CI/CD实现"),e("OutboundLink")],1)])])}),[],!1,null,null,null);a.default=n.exports}}]);